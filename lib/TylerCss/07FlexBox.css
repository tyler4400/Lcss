/**
 * 弹性盒子模型 http://www.runoob.com/css3/css3-flexbox.html
 * 弹性盒子中常用到的属性:
    display	        指定 HTML 元素盒子类型。
    flex-direction	指定了弹性容器中子元素的排列方式
    justify-content	设置弹性盒子元素在主轴（横轴）方向上的对齐方式。
    align-items	    设置弹性盒子元素在侧轴（纵轴）方向上的对齐方式。
    flex-wrap	    设置弹性盒子的子元素超出父容器时是否换行。
    align-content	修改 flex-wrap 属性的行为，类似 align-items, 但不是设置子元素对齐，而是设置行对齐
    flex-flow	    flex-direction 和 flex-wrap 的简写
    order	        设置弹性盒子的子元素排列顺序。
    align-self	    在弹性子元素上使用。覆盖容器的 align-items 属性。
    flex	        设置弹性盒子的子元素如何分配空间。

 * Created by Tyler on 2017/09/05 18:43.
 */

/* 里 |  子元素上下居中 | 变成弹性模型 */
.ai-c{
    display:flex;
    align-items:center;
}

/* 里 |  子元素左右居中 | 变成弹性模型 */
.jc-c{
    display:flex;
    justify-content:center;
}

/* 里 |  子元素水平以中心为准均匀分布 | 变成弹性模型,弹性模型默认纵向适应容器拉伸,记得后面加一句.ai-c */
.jc-sa{
    display:flex;
    justify-content:space-around;
}

/* 里 |  子元素水平以左右为准均匀分布 | 变成弹性模型,弹性模型默认纵向适应容器拉伸,记得后面加一句.ai-c */
.jc-sb{
    display:flex;
    justify-content:space-between;
}

/* 里 |  子元素水平以左为准向右分布 | 变成弹性模型,弹性模型默认纵向适应容器拉伸,记得后面加一句.ai-c  */
.jc-fs{
    display:flex;
    justify-content: flex-start;
}

/* 里 | 元素垂直顺序排列 | 需要配合其它flex定位使用 */
.fd-c{
    display:flex;
    flex-direction: column;
}